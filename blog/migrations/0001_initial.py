# Generated by Django 3.1.1 on 2020-10-22 16:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_title', models.CharField(help_text='Title of your project', max_length=150, unique=True)),
                ('project_description', models.TextField(help_text='What is this project about?')),
                ('views', models.IntegerField(blank=True, default=0)),
                ('project_status', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('contributors', models.ManyToManyField(help_text='Invite other users to help build this project with you.Hold Ctrl and click to add', related_name='wants_to_contribute', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='project_likes', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.CharField(default='There is a typo in one of the project files', help_text='What are the issues about this project?', max_length=50)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('project_with_issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(max_length=100)),
                ('code', models.TextField(blank=True, help_text="Use this section if you don't have the file to upload.Leave blank if you have a file.")),
                ('code_in_file', models.FileField(blank=True, help_text='you can leave this field empty if you put the code in the code section.', upload_to='project_files')),
                ('approved', models.BooleanField(blank=True, default=False)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('approves', models.ManyToManyField(blank=True, related_name='those_who_approved', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.project')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_making_contribution', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotifyMe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notify_title', models.CharField(default='New Notification', max_length=100)),
                ('notify_alert', models.CharField(max_length=200)),
                ('read', models.BooleanField(default=False)),
                ('date_notified', models.DateTimeField(auto_now_add=True)),
                ('follower_sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='who_started_following', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issues', models.TextField(help_text='What are the issues about this code?Just address the issue without fix')),
                ('fix', models.TextField(verbose_name='What should be the fix?Provide it here.')),
                ('resolved', models.BooleanField(default=False)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('projectF', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.projectfiles')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FixProjectIssue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fix', models.CharField(help_text='What should be the fix?Provide it here.', max_length=350)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.projectissues')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(help_text='your suggestions are important,let us know. ', max_length=500)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
